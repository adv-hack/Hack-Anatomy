import React, { Component } from "react";
import ReactSpeedometer from "react-d3-speedometer";
import Loader from "./Loader";
import OverallProgressChart from "./OverallProgressChart";
import EasyDifficultyProgressChart from "./EasyDifficultyProgressChart";
import MediumDifficultyProgressChart from "./MediumDifficultyProgressChart";
import HardDifficultyProgressChart from "./HardDifficultyProgressChart";
class Report extends Component {
  constructor(props) {
    super(props);
    this.state = {
      error: null,
      isLoaded: false,
      items: [],
      learnerResponse:[],
      finalResult:0,
      overallResult: [],
      easyResult: [],
      mediumResult: [],
      hardResult: []
    };
  }
  componentWillMount() {
   var  learnerResponse1 = [];
    // var url =
    // "https://21wgg447m7.execute-api.ap-southeast-1.amazonaws.com/dev/student/123123"
    var url = "https://mm9iu0u34d.execute-api.ap-southeast-1.amazonaws.com/dev/student/989898"
    
    var finalcallurl =
    "http://54.255.204.22:5001/predict/as"
      //  + this.data.learnerID;
    fetch(url)
      .then(res => res.json())
      .then(
        result => {
          learnerResponse1.push({
            subjectid: 5,
            EasyQuestions: result.easyNo,
            //AvgPerEasyQue: result[0].Emarks.reduce( function(cnt,o){ return cnt + o; }, 0) / result[0].totNo,
            AvgPerEasyQue: result.Emarks.reduce( function(cnt,o){ return cnt + o; }, 0) / ( 100 * result.Emarks.length), // result[0].totNo),
            MediumQue: result.mediumNo,
            AvgPerMedQue: result.Mmarks.reduce( function(cnt,o){ return cnt + o; }, 0) / ( 100 * result.Emarks.length),
            HardQuestions: result.hardNo,
            AvgPerHardQue: result.Hmarks.reduce( function(cnt,o){ return cnt + o; }, 0) / ( 100 * result.Emarks.length),
          })

          this.setState({
            items: result,
            learnerResponse:learnerResponse1
          });

          fetch(finalcallurl,{
            method: "POST",
            body: JSON.stringify(this.state.learnerResponse),
            headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json'
            },
          })
          .then(res => res.json())
          .then(
            fresult => {
              this.setState({
               finalResult: fresult * 100,
               overallResult: [14.085734621542512,       0,       0,       7.042867310771256,       0,       7.888643990498722,       7.888643990498722,       33.333333333333336,       33.684874948733174,       34.28522657602438,       33.333333333333336,       33.93368496062454,       34.28522657602438,       16.666666666666668,       16.666666666666668,       16.666666666666668,       16.666666666666668,       16.666666666666668,       16.666666666666668,       11.11111111111111,       11.11111111111111,       0,       50,       50,       50,       50,       20,       0,       0,       0,       0,       4.936404483012599,       0,       4.936404483012599,       0,       4.936404483012599,       0,       4.936404483012599,       0,       0,       0,       20,       20,       22.83550412470263,       20,       20,       22.83550412470263,       20,       22.83550412470263,       22.83550412470263,       20,       20,       22.83550412470263,       20,       20,       22.83550412470263,       20,       20,       22.83550412470263,       20,       20,       22.83550412470263,       14.177520623513173,       50,       57.08876031175658,       25,       25,       28.54438015587829,       25,       25,       28.54438015587829,       25,       25,       28.54438015587829,       25,       28.54438015587829,       50,       57.08876031175658,       25,       25,       28.54438015587829,       25,       28.54438015587829,       14.177520623513173,       50,       57.08876031175658,       33.333333333333336,       38.059173541171056,       7.0887603117565865,       0,       25,       28.54438015587829,       28.54438015587829,       25,       25,       28.54438015587829,       0,       0,       33.333333333333336,       33.333333333333336,       38.059173541171056,       25,       25,       28.54438015587829,       33.333333333333336,       33.333333333333336,       38.059173541171056,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       11.417752062351315,       12.895357481008412,       9.872808966025199,       9.872808966025199,       9.872808966025199,       42.73325490596023,       20,       20,       20,       22.83550412470263,       24.81006591790767,       0,       0,       0,       3.633901705236081,       4.418868773514807,       16.666666666666668,       16.666666666666668,       16.666666666666668,       16.666666666666668,       20.5502410337549,       24.99172810328291,       0,       3.5804841448597378,       6.266624958264742,       9.367997302155207,       0,       33.333333333333336,       37.82667959808276,       39.8520645724653,       11.11111111111111,       11.11111111111111,       11.11111111111111,       11.11111111111111,       11.11111111111111,       12.208089885113912,       13.025045492040988,       19.270967014286377,       19.270967014286377,       11.11111111111111,       11.11111111111111,       11.11111111111111,       11.11111111111111,       11.11111111111111,       11.781228514881038,       14.263081281466182,       15.655664605525017,       16.752643379527814,       42.73325490596023,       42.73325490596023,       42.78870700620166,       11.11111111111111,       11.11111111111111,       11.11111111111111,       12.175901065798218,       12.175901065798218,       12.175901065798218,       13.470323117824485,       14.851750252951328,       15.931160781893794,       16.666666666666668,       16.666666666666668,       16.666666666666668,       16.666666666666668,       16.666666666666668,       18.738807369356937,       0,       1.7902420724298689,       4.583582471420316,       7.400404183002787,       50,       53.58048414485974,       0,       7.1871968398092,       0,       0,       11.11111111111111,       11.11111111111111,       11.11111111111111,       11.11111111111111,       11.11111111111111,       13.129945391797822,       13.800062795567747,       16.28191556215289,       16.95704388694707,       40,       40,       40,       40,       42.25345736926597,       40,       40,       40,       44.13064480373115,       44.13064480373115,       20,       20,       20,       22.57907149620168,       25.41335545652854,       11.11111111111111,       11.11111111111111,       11.11111111111111,       11.78623943590529,       11.78623943590529,       12.717763868570403,       12.717763868570403,       14.215545956820213,       15.03250156374729,       0,       0,       0,       0,       0,       0,       0,       0,       4.201328294825112,       9.78549701964169,       0,       0,       4.698069902279617,       0,       0,       0,       0,       0,       11.168337449633153,       0,       0,       50,       50,       33.333333333333336,       33.333333333333336,       33.333333333333336,       50,       50,       16.666666666666668,       0,       0,       25,       0,       11.11111111111111,       10.420309818292727,       15.545773456782241,       13.81183239863954,       11.729450517402393,       13.401693272136692,       48.98851947785272,       48.98851947785272,       48.98851947785272,       48.98851947785272,       48.98851947785272,       48.98851947785272,       0,       99.99994074074074,       64.78590990658115,       11.11111111111111,       12.5,       28.571428571428573,       16.666666666666668,       0],
               easyResult: [14.085734621542512,       0,       0,       7.042867310771256,       0,       7.888643990498722,       7.888643990498722,       33.333333333333336,       33.684874948733174,       34.28522657602438,       33.333333333333336,       33.93368496062454,       34.28522657602438,       16.666666666666668,       16.666666666666668,       16.666666666666668,       16.666666666666668,       16.666666666666668,       16.666666666666668,       50,       50,       50,       50,       0,       0,       0,       0,       0,       0,       0,       0,       0,       33.333333333333336,       33.333333333333336,       33.333333333333336,       16.666666666666668,       0],
               mediumResult:[14.085734621542512,       0,       0,       7.042867310771256,       0,       7.888643990498722,       7.888643990498722,       33.333333333333336,       33.684874948733174,       34.28522657602438,       33.333333333333336,       33.93368496062454,       34.28522657602438,       16.666666666666668,       16.666666666666668,       16.666666666666668,       16.666666666666668,       16.666666666666668,       16.666666666666668,       50,       50,       50,       50,       0,       0,       0,       0,       0,       0,       0,       0,       0,       33.333333333333336,       33.333333333333336,       33.333333333333336,       16.666666666666668,       0],
               isLoaded:true
              });
            },
            error => {
            });
        },
        error => {
          this.setState({
            isLoaded: true,
            error
          });
        }
      );
  }

  render() {
    const { error, isLoaded } = this.state;
    if (error) {
      return <div>Error: {error.message}</div>;
    } else if (!isLoaded) {
      return <div><Loader /></div>;
    } else {
    return (
      <div className="row">
      <div className="col-md-12">
      <div style={{textAlign:"center"}}>
          <h1>Prediction</h1>
        </div>
      </div>
      <div className="row">
      <div className="col-md-12">
      <div className="col-md-4"></div>
      <div className="col-md-4">
      <ReactSpeedometer
          value={this.state.finalResult}
          needleTransitionDuration={4000}
          minValue={0}
          width={500}
          height={400}
          maxValue={100}
          needleTransition="easeElastic"
          currentValueText="Current Value: ${value}"
        />
        <OverallProgressChart value="[14.085734621542512,       0,       0,       7.042867310771256,       0,       7.888643990498722,       7.888643990498722,       33.333333333333336,       33.684874948733174,       34.28522657602438,       33.333333333333336,       33.93368496062454,       34.28522657602438,       16.666666666666668,       16.666666666666668,       16.666666666666668,       16.666666666666668,       16.666666666666668,       16.666666666666668,       11.11111111111111,       11.11111111111111,       0,       50,       50,       50,       50,       20,       0,       0,       0,       0,       4.936404483012599,       0,       4.936404483012599,       0,       4.936404483012599,       0,       4.936404483012599,       0,       0,       0,       20,       20,       22.83550412470263,       20,       20,       22.83550412470263,       20,       22.83550412470263,       22.83550412470263,       20,       20,       22.83550412470263,       20,       20,       22.83550412470263,       20,       20,       22.83550412470263,       20,       20,       22.83550412470263,       14.177520623513173,       50,       57.08876031175658,       25,       25,       28.54438015587829,       25,       25,       28.54438015587829,       25,       25,       28.54438015587829,       25,       28.54438015587829,       50,       57.08876031175658,       25,       25,       28.54438015587829,       25,       28.54438015587829,       14.177520623513173,       50,       57.08876031175658,       33.333333333333336,       38.059173541171056,       7.0887603117565865,       0,       25,       28.54438015587829,       28.54438015587829,       25,       25,       28.54438015587829,       0,       0,       33.333333333333336,       33.333333333333336,       38.059173541171056,       25,       25,       28.54438015587829,       33.333333333333336,       33.333333333333336,       38.059173541171056,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       11.417752062351315,       12.895357481008412,       9.872808966025199,       9.872808966025199,       9.872808966025199,       42.73325490596023,       20,       20,       20,       22.83550412470263,       24.81006591790767,       0,       0,       0,       3.633901705236081,       4.418868773514807,       16.666666666666668,       16.666666666666668,       16.666666666666668,       16.666666666666668,       20.5502410337549,       24.99172810328291,       0,       3.5804841448597378,       6.266624958264742,       9.367997302155207,       0,       33.333333333333336,       37.82667959808276,       39.8520645724653,       11.11111111111111,       11.11111111111111,       11.11111111111111,       11.11111111111111,       11.11111111111111,       12.208089885113912,       13.025045492040988,       19.270967014286377,       19.270967014286377,       11.11111111111111,       11.11111111111111,       11.11111111111111,       11.11111111111111,       11.11111111111111,       11.781228514881038,       14.263081281466182,       15.655664605525017,       16.752643379527814,       42.73325490596023,       42.73325490596023,       42.78870700620166,       11.11111111111111,       11.11111111111111,       11.11111111111111,       12.175901065798218,       12.175901065798218,       12.175901065798218,       13.470323117824485,       14.851750252951328,       15.931160781893794,       16.666666666666668,       16.666666666666668,       16.666666666666668,       16.666666666666668,       16.666666666666668,       18.738807369356937,       0,       1.7902420724298689,       4.583582471420316,       7.400404183002787,       50,       53.58048414485974,       0,       7.1871968398092,       0,       0,       11.11111111111111,       11.11111111111111,       11.11111111111111,       11.11111111111111,       11.11111111111111,       13.129945391797822,       13.800062795567747,       16.28191556215289,       16.95704388694707,       40,       40,       40,       40,       42.25345736926597,       40,       40,       40,       44.13064480373115,       44.13064480373115,       20,       20,       20,       22.57907149620168,       25.41335545652854,       11.11111111111111,       11.11111111111111,       11.11111111111111,       11.78623943590529,       11.78623943590529,       12.717763868570403,       12.717763868570403,       14.215545956820213,       15.03250156374729,       0,       0,       0,       0,       0,       0,       0,       0,       4.201328294825112,       9.78549701964169,       0,       0,       4.698069902279617,       0,       0,       0,       0,       0,       11.168337449633153,       0,       0,       50,       50,       33.333333333333336,       33.333333333333336,       33.333333333333336,       50,       50,       16.666666666666668,       0,       0,       25,       0,       11.11111111111111,       10.420309818292727,       15.545773456782241,       13.81183239863954,       11.729450517402393,       13.401693272136692,       48.98851947785272,       48.98851947785272,       48.98851947785272,       48.98851947785272,       48.98851947785272,       48.98851947785272,       0,       99.99994074074074,       64.78590990658115,       11.11111111111111,       12.5,       28.571428571428573,       16.666666666666668,       0]" />
        <EasyDifficultyProgressChart value="[14.085734621542512,       0,       0,       7.042867310771256,       0,       7.888643990498722,       7.888643990498722,       33.333333333333336,       33.684874948733174,       34.28522657602438,       33.333333333333336,       33.93368496062454,       34.28522657602438,       16.666666666666668,       16.666666666666668,       16.666666666666668,       16.666666666666668,       16.666666666666668,       16.666666666666668,       50,       50,       50,       50,       0,       0,       0,       0,       0,       0,       0,       0,       0,       33.333333333333336,       33.333333333333336,       33.333333333333336,       16.666666666666668,       0]" />
        <MediumDifficultyProgressChart value="[14.085734621542512,       0,       0,       7.042867310771256,       0,       7.888643990498722,       7.888643990498722,       33.333333333333336,       33.684874948733174,       34.28522657602438,       33.333333333333336,       33.93368496062454,       34.28522657602438,       16.666666666666668,       16.666666666666668,       16.666666666666668,       16.666666666666668,       16.666666666666668,       16.666666666666668,       50,       50,       50,       50,       0,       0,       0,       0,       0,       0,       0,       0,       0,       33.333333333333336,       33.333333333333336,       33.333333333333336,       16.666666666666668,       0]" />
        <HardDifficultyProgressChart value="[14.085734621542512,       0,       0,       7.042867310771256,       0,       7.888643990498722,       7.888643990498722,       33.333333333333336,       33.684874948733174,       34.28522657602438,       33.333333333333336,       33.93368496062454,       34.28522657602438,       16.666666666666668,       16.666666666666668,       16.666666666666668,       16.666666666666668,       16.666666666666668,       16.666666666666668,       11.11111111111111,       11.11111111111111,       0,       50,       50,       50,       50,       20,       0,       0,       0,       0,       4.936404483012599,       0,       4.936404483012599,       0,       4.936404483012599,       0,       4.936404483012599,       0,       0,       0,       20,       20,       22.83550412470263,       20,       20,       22.83550412470263,       20,       22.83550412470263,       22.83550412470263,       20,       20,       22.83550412470263,       20,       20,       22.83550412470263,       20,       20,       22.83550412470263,       20,       20,       22.83550412470263,       14.177520623513173,       50,       57.08876031175658,       25,       25,       28.54438015587829,       25,       25,       28.54438015587829,       25,       25,       28.54438015587829,       25,       28.54438015587829,       50,       57.08876031175658,       25,       25,       28.54438015587829,       25,       28.54438015587829,       14.177520623513173,       50,       57.08876031175658,       33.333333333333336,       38.059173541171056,       7.0887603117565865,       0,       25,       28.54438015587829,       28.54438015587829,       25,       25,       28.54438015587829,       0,       0,       33.333333333333336,       33.333333333333336,       38.059173541171056,       25,       25,       28.54438015587829,       33.333333333333336,       33.333333333333336,       38.059173541171056,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       10,       11.417752062351315,       12.895357481008412,       9.872808966025199,       9.872808966025199,       9.872808966025199,       42.73325490596023,       20,       20,       20,       22.83550412470263,       24.81006591790767,       0,       0,       0,       3.633901705236081,       4.418868773514807,       16.666666666666668,       16.666666666666668,       16.666666666666668,       16.666666666666668,       20.5502410337549,       24.99172810328291,       0,       3.5804841448597378,       6.266624958264742,       9.367997302155207,       0,       33.333333333333336,       37.82667959808276,       39.8520645724653,       11.11111111111111,       11.11111111111111,       11.11111111111111,       11.11111111111111,       11.11111111111111,       12.208089885113912,       13.025045492040988,       19.270967014286377,       19.270967014286377,       11.11111111111111,       11.11111111111111,       11.11111111111111,       11.11111111111111,       11.11111111111111,       11.781228514881038,       14.263081281466182,       15.655664605525017,       16.752643379527814,       42.73325490596023,       42.73325490596023,       42.78870700620166,       11.11111111111111,       11.11111111111111,       11.11111111111111,       12.175901065798218,       12.175901065798218,       12.175901065798218,       13.470323117824485,       14.851750252951328,       15.931160781893794,       16.666666666666668,       16.666666666666668,       16.666666666666668,       16.666666666666668,       16.666666666666668,       18.738807369356937,       0,       1.7902420724298689,       4.583582471420316,       7.400404183002787,       50,       53.58048414485974,       0,       7.1871968398092,       0,       0,       11.11111111111111,       11.11111111111111,       11.11111111111111,       11.11111111111111,       11.11111111111111,       13.129945391797822,       13.800062795567747,       16.28191556215289,       16.95704388694707,       40,       40,       40,       40,       42.25345736926597,       40,       40,       40,       44.13064480373115,       44.13064480373115,       20,       20,       20,       22.57907149620168,       25.41335545652854,       11.11111111111111,       11.11111111111111,       11.11111111111111,       11.78623943590529,       11.78623943590529,       12.717763868570403,       12.717763868570403,       14.215545956820213,       15.03250156374729,       0,       0,       0,       0,       0,       0,       0,       0,       4.201328294825112,       9.78549701964169,       0,       0,       4.698069902279617,       0,       0,       0,       0,       0,       11.168337449633153,       0,       0,       50,       50,       33.333333333333336,       33.333333333333336,       33.333333333333336,       50,       50,       16.666666666666668,       0,       0,       25,       0,       11.11111111111111,       10.420309818292727,       15.545773456782241,       13.81183239863954,       11.729450517402393,       13.401693272136692,       48.98851947785272,       48.98851947785272,       48.98851947785272,       48.98851947785272,       48.98851947785272,       48.98851947785272,       0,       99.99994074074074,       64.78590990658115,       11.11111111111111,       12.5,       28.571428571428573,       16.666666666666668,       0]" />
      </div>
      <div className="col-md-4"></div>
      </div>
      </div>
      </div>
    );
  }
}
}
export default Report;
